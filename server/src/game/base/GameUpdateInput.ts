/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsInt, IsOptional, ValidateNested } from "class-validator";
import { DeckUpdateManyWithoutGamesInput } from "./DeckUpdateManyWithoutGamesInput";
import { Type } from "class-transformer";
import { PlayerUpdateManyWithoutGamesInput } from "./PlayerUpdateManyWithoutGamesInput";
import { RoundUpdateManyWithoutGamesInput } from "./RoundUpdateManyWithoutGamesInput";
@InputType()
class GameUpdateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  currentRound?: number | null;

  @ApiProperty({
    required: false,
    type: () => DeckUpdateManyWithoutGamesInput,
  })
  @ValidateNested()
  @Type(() => DeckUpdateManyWithoutGamesInput)
  @IsOptional()
  @Field(() => DeckUpdateManyWithoutGamesInput, {
    nullable: true,
  })
  decks?: DeckUpdateManyWithoutGamesInput;

  @ApiProperty({
    required: false,
    type: () => PlayerUpdateManyWithoutGamesInput,
  })
  @ValidateNested()
  @Type(() => PlayerUpdateManyWithoutGamesInput)
  @IsOptional()
  @Field(() => PlayerUpdateManyWithoutGamesInput, {
    nullable: true,
  })
  players?: PlayerUpdateManyWithoutGamesInput;

  @ApiProperty({
    required: false,
    type: () => RoundUpdateManyWithoutGamesInput,
  })
  @ValidateNested()
  @Type(() => RoundUpdateManyWithoutGamesInput)
  @IsOptional()
  @Field(() => RoundUpdateManyWithoutGamesInput, {
    nullable: true,
  })
  rounds?: RoundUpdateManyWithoutGamesInput;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  totalRounds?: number;
}
export { GameUpdateInput };
