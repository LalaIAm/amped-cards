/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { IsInt, IsOptional, ValidateNested } from "class-validator";
import { DeckCreateNestedManyWithoutGamesInput } from "./DeckCreateNestedManyWithoutGamesInput";
import { Type } from "class-transformer";
import { PlayerCreateNestedManyWithoutGamesInput } from "./PlayerCreateNestedManyWithoutGamesInput";
import { RoundCreateNestedManyWithoutGamesInput } from "./RoundCreateNestedManyWithoutGamesInput";
@InputType()
class GameCreateInput {
  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  currentRound?: number | null;

  @ApiProperty({
    required: false,
    type: () => DeckCreateNestedManyWithoutGamesInput,
  })
  @ValidateNested()
  @Type(() => DeckCreateNestedManyWithoutGamesInput)
  @IsOptional()
  @Field(() => DeckCreateNestedManyWithoutGamesInput, {
    nullable: true,
  })
  decks?: DeckCreateNestedManyWithoutGamesInput;

  @ApiProperty({
    required: false,
    type: () => PlayerCreateNestedManyWithoutGamesInput,
  })
  @ValidateNested()
  @Type(() => PlayerCreateNestedManyWithoutGamesInput)
  @IsOptional()
  @Field(() => PlayerCreateNestedManyWithoutGamesInput, {
    nullable: true,
  })
  players?: PlayerCreateNestedManyWithoutGamesInput;

  @ApiProperty({
    required: false,
    type: () => RoundCreateNestedManyWithoutGamesInput,
  })
  @ValidateNested()
  @Type(() => RoundCreateNestedManyWithoutGamesInput)
  @IsOptional()
  @Field(() => RoundCreateNestedManyWithoutGamesInput, {
    nullable: true,
  })
  rounds?: RoundCreateNestedManyWithoutGamesInput;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  totalRounds!: number;
}
export { GameCreateInput };
