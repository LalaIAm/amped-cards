/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsInt,
  IsOptional,
  ValidateNested,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { Deck } from "../../deck/base/Deck";
import { Player } from "../../player/base/Player";
import { Round } from "../../round/base/Round";
@ObjectType()
class Game {
  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  currentRound!: number | null;

  @ApiProperty({
    required: false,
    type: () => [Deck],
  })
  @ValidateNested()
  @Type(() => Deck)
  @IsOptional()
  decks?: Array<Deck>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [Player],
  })
  @ValidateNested()
  @Type(() => Player)
  @IsOptional()
  players?: Array<Player>;

  @ApiProperty({
    required: false,
    type: () => [Round],
  })
  @ValidateNested()
  @Type(() => Round)
  @IsOptional()
  rounds?: Array<Round>;

  @ApiProperty({
    required: true,
    type: Number,
  })
  @IsInt()
  @Field(() => Number)
  totalRounds!: number;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;
}
export { Game };
