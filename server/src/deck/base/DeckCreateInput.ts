/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BlackCardCreateNestedManyWithoutDecksInput } from "./BlackCardCreateNestedManyWithoutDecksInput";
import { ValidateNested, IsOptional, IsString } from "class-validator";
import { Type } from "class-transformer";
import { GameWhereUniqueInput } from "../../game/base/GameWhereUniqueInput";
import { WhiteCardCreateNestedManyWithoutDecksInput } from "./WhiteCardCreateNestedManyWithoutDecksInput";
@InputType()
class DeckCreateInput {
  @ApiProperty({
    required: false,
    type: () => BlackCardCreateNestedManyWithoutDecksInput,
  })
  @ValidateNested()
  @Type(() => BlackCardCreateNestedManyWithoutDecksInput)
  @IsOptional()
  @Field(() => BlackCardCreateNestedManyWithoutDecksInput, {
    nullable: true,
  })
  blackCards?: BlackCardCreateNestedManyWithoutDecksInput;

  @ApiProperty({
    required: false,
    type: () => GameWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => GameWhereUniqueInput)
  @IsOptional()
  @Field(() => GameWhereUniqueInput, {
    nullable: true,
  })
  game?: GameWhereUniqueInput | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  identifier!: string;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  title?: string | null;

  @ApiProperty({
    required: false,
    type: () => WhiteCardCreateNestedManyWithoutDecksInput,
  })
  @ValidateNested()
  @Type(() => WhiteCardCreateNestedManyWithoutDecksInput)
  @IsOptional()
  @Field(() => WhiteCardCreateNestedManyWithoutDecksInput, {
    nullable: true,
  })
  whiteCards?: WhiteCardCreateNestedManyWithoutDecksInput;
}
export { DeckCreateInput };
