/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/docs/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { DeckWhereUniqueInput } from "../../deck/base/DeckWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsBoolean,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { PlayerWhereUniqueInput } from "../../player/base/PlayerWhereUniqueInput";
import { RoundCreateNestedManyWithoutWhiteCardsInput } from "./RoundCreateNestedManyWithoutWhiteCardsInput";
@InputType()
class WhiteCardCreateInput {
  @ApiProperty({
    required: false,
    type: () => DeckWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => DeckWhereUniqueInput)
  @IsOptional()
  @Field(() => DeckWhereUniqueInput, {
    nullable: true,
  })
  deck?: DeckWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  discoarded?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => PlayerWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlayerWhereUniqueInput)
  @IsOptional()
  @Field(() => PlayerWhereUniqueInput, {
    nullable: true,
  })
  players?: PlayerWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => RoundCreateNestedManyWithoutWhiteCardsInput,
  })
  @ValidateNested()
  @Type(() => RoundCreateNestedManyWithoutWhiteCardsInput)
  @IsOptional()
  @Field(() => RoundCreateNestedManyWithoutWhiteCardsInput, {
    nullable: true,
  })
  rounds?: RoundCreateNestedManyWithoutWhiteCardsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  selected?: boolean | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  text!: string;
}
export { WhiteCardCreateInput };
